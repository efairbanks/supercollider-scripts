{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red255\green102\blue0;
\red51\green51\blue191;\red0\green0\blue191;\red96\green96\blue96;\red0\green0\blue255;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs30 \cf2 \
\cf3 /* TODO:\
 * \
 * * Make padKONTROL class (singleton)\
 * * Handle inputs and build states/getters for pressed, held, released, etc\'85\
 * * Migrate output functions to class\
 * \
 * \
 * \
 */\cf2 \
 \
(\
\
\cf4 ~pks\cf2  = \cf5 nil\cf2 ; \cf3 // Keepin' it fresh!\cf2 \
\
\cf4 ~padKONTROL\cf2  = \{\
	\
	\cf3 // pks = PadKONTROL Singleton\cf2 \
	\
	|message|\
	\
	if(\cf4 ~pks\cf2 ==\cf5 nil\cf2 ,\{\
	\
		
\fs26 \cf6 MIDIClient\cf2 .init;
\fs30 \
	\
		\cf4 ~pks\cf2  = ();\
		\
		\cf4 ~pks\cf2 .sysexSend = \cf6 MIDIOut\cf2 .new(\cf6 MIDIClient\cf2 .destinations.indexOf(\cf6 MIDIOut\cf2 .findPort(\cf7 "padKONTROL"\cf2 , \cf7 "CTRL"\cf2 )));\
		\cf4 ~pks\cf2 .sysexRecv = \cf6 MIDIIn\cf2 .connect(0,\cf6 MIDIClient\cf2 .sources.indexOf(\cf6 MIDIIn\cf2 .findPort(\cf7 "padKONTROL"\cf2 , \cf7 "PORT A"\cf2 )));\
		\
		\cf4 ~pks\cf2 .init = \{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf2 				\
			\cf4 ~pks\cf2 .sysexSend.sysex(\cf6 Int8Array\cf2 [0xF0, 0x42, 0x40, 0x6E, 0x08, 0x00, 0x00, 0x01, 0xF7,0xF0, 0x42, 0x40, 0x6E, 0x08, 0x3F, 0x2A, 0x00, 0x00, 0x05, 0x05, 0x05, 0x7F, 0x7E, 0x7F, 0x7F, 0x03, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0d, 0x0E, 0x0F, 0x10, 0xF7,0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x29,0x29,0xF7]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 		\
		\};\
		\
		\cf4 ~pks\cf2 .init.();\
	\
		\cf4 ~pks\cf2 .button2index = (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf2 \
			0: 0,\
			1: 1,\
			2: 2,\
			3: 3,\
			4: 4,\
			5: 5,\
			6: 6,\
			7: 7,\
			8: 8,\
			9: 9,\
			10: 10,\
			11: 11,\
			12: 12,\
			13: 13,\
			14: 14,\
			15: 15,\
			scene: 16,\
			message: 17,\
			setting: 18,\
			note: 19,\
			midich: 20,\
			swtype: 21,\
			relval: 22,\
			velocity: 23,\
			port: 24,\
			fixedvelocity: 25,\
			progchange: 26,\
			x: 27,\
			y: 28,\
			knob1: 29,\
			knob2: 30,\
			pedal: 31,\
			roll: 32,\
			flam: 33,\
			hold: 34\
		\
		);\
		\
		\cf4 ~pks\cf2 .states2sysex = \{\
\
			\cf8 |states, numberarray|\cf2 \
			\
			\cf8 var\cf2  hexarray, numvalues;\
			\
			numvalues = (states.size/7).asInteger;\
			\
			hexarray = 0!numvalues;\
			\
			numvalues.do(\{ \cf8 |valueiter|\cf2 \
				\
				7.do(\{ \cf8 |bititer|\cf2 \
				\
					hexarray[valueiter] = states[valueiter*7+bititer]*(1<<bititer) + hexarray[valueiter];\
				\
				\});\
				\
			\});\
			\
			hexarray++[0x00]++(numberarray.reverse);\
			\
		\};\
		\
		\cf4 ~pks\cf2 .sendSysex = \{\
	\
			\cf8 |hexvals|\cf2 \
			\
			\cf4 ~pks\cf2 .sysexSend.sysex(\cf6 Int8Array\cf2 .newFrom([0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01]++hexvals++[0xF7]));\
			\
		\};\
		\
		\cf4 ~pks\cf2 .lightStates	= (1!16)++(0!19);\
		\cf4 ~pks\cf2 .numberStates	= [0x32,0x32,0x32];\
		\
		\cf4 ~pks\cf2 .setLights = \{\
		\
			\cf4 ~pks\cf2 .sendSysex.(\cf4 ~pks\cf2 .states2sysex.(\cf4 ~pks\cf2 .lightStates, \cf4 ~pks\cf2 .numberStates));\
			\
		\};\
		\
		\cf4 ~pks\cf2 .setLights.();\
		\
		\cf3 // --- end class --- //\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 		\
	\});\
	\
	\cf3 // --- //\cf2 \
	\
	\cf4 ~pks\cf2 [message];\
	\
\};\
\
)\
\
\cf4 ~padKONTROL\cf2 .(\cf9 \\init\cf2 );\
\
\cf4 ~padKONTROL\cf2 .(\cf9 \\sendSysex\cf2 ).(\cf4 ~padKONTROL\cf2 .(\cf9 \\states2sysex\cf2 ).(1!35, [0x32,0x32,0x32]));\
\
(\
\
\pard\pardeftab560

\fs26 \cf6 MIDIClient\cf2 .init;
\fs30 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf4 ~pkMIDIout\cf2 	= \cf6 MIDIOut\cf2 .new(\cf6 MIDIClient\cf2 .destinations.indexOf(\cf6 MIDIOut\cf2 .findPort(\cf7 "padKONTROL"\cf2 , \cf7 "CTRL"\cf2 )));\
\
\cf4 ~pkMIDIin\cf2 	= \cf6 MIDIIn\cf2 .connect(0,\cf6 MIDIClient\cf2 .sources.indexOf(\cf6 MIDIIn\cf2 .findPort(\cf7 "padKONTROL"\cf2 , \cf7 "PORT A"\cf2 )));\
\
\cf4 ~pkInit\cf2  = \{\
	\
\cf8 |midiport|\cf2 \
	\
midiport.sysex(\cf6 Int8Array\cf2 [0xF0, 0x42, 0x40, 0x6E, 0x08, 0x00, 0x00, 0x01, 0xF7,0xF0, 0x42, 0x40, 0x6E, 0x08, 0x3F, 0x2A, 0x00, 0x00, 0x05, 0x05, 0x05, 0x7F, 0x7E, 0x7F, 0x7F, 0x03, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0d, 0x0E, 0x0F, 0x10, 0xF7,0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x29,0x29,0xF7]);\
\
\};\
\
\cf4 ~pkTest\cf2  = \{\
\
\cf8 |midiport|\cf2 	\
	\
midiport.sysex(\cf6 Int8Array\cf2 [0xF0,0x42,0x40,0x6E,0x08,0x22,0x04,0x00,0x59,0x45,0x53,0xF7]);\
	\
\};\
\
\cf4 ~pkSetLight\cf2  = \{\
\
\cf8 |midiport, light, state|\cf2 \
	\
midiport.sysex(\cf6 Int8Array\cf2 [0xF0,0x42,0x40,0x6E,0x08,0x01,light,0x20*state,0xF7]);\
	\
\};\
\
\pard\pardeftab720\sl360
\cf4 ~pkSetAllLights\cf2  = \{\
\
	\cf8 |midiport|\cf2 \
	\
	midiport.sysex(\cf6 Int8Array\cf2 [0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x7F,0x7F,0x7F,0x7F,0x7F,0x00,0x38,0x38,0x38,0xF7]);\
	\
	\
	\
\};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf2 \
\cf4 ~pkLightStates2HexArray\cf2  = \{\
\
	\cf8 |states, lights|\cf2 \
	\
	\cf8 var\cf2  hexarray, numvalues;\
	\
	numvalues = (states.size/7).asInteger;\
	\
	hexarray = 0!numvalues;\
	\
	numvalues.do(\{ \cf8 |valueiter|\cf2 \
		\
		7.do(\{ \cf8 |bititer|\cf2 \
		\
			hexarray[valueiter] = states[valueiter*7+bititer]*(1<<bititer) + hexarray[valueiter];\
		\
		\});\
		\
	\});\
	\
	hexarray++[0x00]++(lights.reverse);\
	\
\};\
\
\cf4 ~pkSetLightStates\cf2  = \{\
	\
	\cf8 |hexvals|\cf2 \
	\
	\cf4 ~pkMIDIout\cf2 .sysex(\cf6 Int8Array\cf2 .newFrom([0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01]++hexvals++[0xF7]));\
	\
\};\
\
\cf4 ~randomizeLightStates\cf2  = \{\
	\
	\cf4 ~pkLightStates\cf2 .size.do(\{\
	\
		\cf8 |inc|\cf2 \
		\
		\cf4 ~pkLightStates\cf2 [inc] = 2.rand;\
		\
	\});\
	\
	\cf4 ~pkSetLightStates\cf2 .(\cf4 ~pkLightStates2HexArray\cf2 .(\cf4 ~pkLightStates\cf2 , [38,38,38]));\
	\
\};\
\
\cf4 ~buttonName2Index\cf2  = (\
\
	0: 0,\
	1: 1,\
	2: 2,\
	3: 3,\
	4: 4,\
	5: 5,\
	6: 6,\
	7: 7,\
	8: 8,\
	9: 9,\
	10: 10,\
	11: 11,\
	12: 12,\
	13: 13,\
	14: 14,\
	15: 15,\
	scene: 16,\
	message: 17,\
	setting: 18,\
	note: 19,\
	midich: 20,\
	swtype: 21,\
	relval: 22,\
	velocity: 23,\
	port: 24,\
	fixedvelocity: 25,\
	progchange: 26,\
	x: 27,\
	y: 28,\
	knob1: 29,\
	knob2: 30,\
	pedal: 31,\
	roll: 32,\
	flam: 33,\
	hold: 34\
\
);\
\
\cf3 // --- //\cf2 \
\
\cf4 ~pkInit\cf2 .(\cf4 ~pkMIDIout\cf2 );\
\
\cf4 ~pkLightStates\cf2  = ((0!35)[19]=1);\
\
\cf4 ~pkSetLightStates\cf2 .(\cf4 ~pkLightStates2HexArray\cf2 .(((0!35)[\cf4 ~buttonName2Index\cf2 [\cf9 \\setting\cf2 ]]=1), [0x31,0x32,0x33]));\
\
\cf4 ~randomizeLightStates\cf2 .();\
\
\cf4 ~pkLightStates\cf2 [0]=1;\
\
\pard\pardeftab720\sl360
\cf4 ~pkMIDIout\cf2 .sysex(\cf6 Int8Array\cf2 [0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x7F,0x7F,0x7F,0x7F,0x7F,0x00,0x38,0x38,0x38,0xF7]);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf2 )}