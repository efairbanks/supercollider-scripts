{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red0\green0\blue255;
\red255\green102\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs26 \cf0 \
// --- Setup --- //\
\
(\
\
\cf2 SynthDef\cf0 (\cf3 \\simplesin\cf0 ,\{\
\
	\cf4 |freq=440, amp=0.02|\cf0 \
\
	\cf4 var\cf0  out = \cf2 SinOsc\cf0 .ar(freq)*amp*\cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 ([0,1,0],[1,4]),doneAction:2);\
\
	\cf2 Out\cf0 .ar(0,out!2);\
	\
\}).store;\
\
\cf2 SynthDef\cf0 (\cf3 \\simplenoise\cf0 ,\{\
\
	\cf4 |freq=440, amp=0.8|\cf0 \
\
	\cf4 var\cf0  out, tone, env;\
	\
	env = \cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 ([0,1,0],[1,4]),doneAction:2);\
	\
	tone = \cf2 BPF\cf0 .ar(\cf2 PinkNoise\cf0 .ar(), freq, 0.05*env);\
\
	out = tone*amp*env;\
\
	\cf2 Out\cf0 .ar(0,out!2);\
	\
\}).store;\
\
\cf2 SynthDef\cf0 (\cf3 \\beepdecay\cf0 ,\{\
\
	\cf4 |freq=440, amp=0.2|\cf0 \
	\
	\cf4 var\cf0  env, out, tone;\
	\
	env = \cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 ([0.0001,1,0.0001],[8,8],\cf3 'exponential'\cf0 ),doneAction:2)*\cf2 LPF\cf0 .ar(\cf2 Saw\cf0 .ar(\cf2 Rand\cf0 (3, 8)),4);\
	\
	tone = \cf2 Pulse\cf0 .ar(freq*2+\cf2 SinOsc\cf0 .ar(0.2+\cf2 Rand\cf0 (0, 0.6),0,freq/(\cf2 Rand\cf0 (10, 40))),0.2*env);\
	\
	out = \cf2 LPF\cf0 .ar(\cf2 HPF\cf0 .ar(tone*env*amp,2000),4000);\
	\
	\cf2 Out\cf0 .ar(0,out!2);\
	\
	\
\}).store;\
\
\cf2 SynthDef\cf0 (\cf3 \\noisedecay\cf0 ,\{\
	\
	\cf4 |freq=3000, amp=0.9|\cf0 \
	\
	\cf4 var\cf0  noise, env, env2, out;\
	\
	env = \cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 ([1,0.0001],[8],\cf3 'exponential'\cf0 ),doneAction:2);\
	\
	env2 = env*(1-env);\
	\
	noise = \cf2 BPF\cf0 .ar(\cf2 PinkNoise\cf0 .ar(),freq+(env*freq/2)-(freq/2),0.025+(env*0.2));\
	\
	noise = noise + BPF.ar(PinkNoise.ar(),400+SinOsc.ar(20,0,200),0.02+(0.1*env2));\
	\
	out = noise*env;\
	\
	\cf2 Out\cf0 .ar(0,out!2);\
	\
\}).store;\
\
\cf2 SynthDef\cf0 (\cf3 \\noisebuild\cf0 ,\{\
	\
	\cf4 |freq=3000, amp=0.9|\cf0 \
	\
	\cf4 var\cf0  noise, env, env2, out;\
	\
	env = \cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 ([0.0001,0.5,0.0001],[4,0.5],\cf3 'exponential'\cf0 ),doneAction:2);\
	\
	env2 = env*(1-env);\
	\
	noise = \cf2 BPF\cf0 .ar(\cf2 PinkNoise\cf0 .ar(),freq+(env*freq/2)-(freq/2),0.025+(env*0.2));\
	\
	noise = noise + BPF.ar(PinkNoise.ar(),400+SinOsc.ar(20,0,200),0.02+(0.1*env2));\
	\
	out = noise*env;\
	\
	\cf2 Out\cf0 .ar(0,out!2);\
	\
\}).store;\
\
)\
\
(\
\
\cf5 ~freq\cf0  = 440;\
\
\cf5 ~intervals\cf0  = [3/2,4/3,2,1/2,2/3,1/3,1/2,1];\
\
t = \cf2 TempoClock\cf0 (160/60).sched(0,\{\
	\
	\cf4 var\cf0  newfreq;\
	\
	\cf2 Synth\cf0 (\cf3 \\simplesin\cf0 ,[\cf3 \\freq\cf0 ,\cf5 ~freq\cf0 ]);	\
	\
	newfreq = \cf5 ~freq\cf0  * \cf5 ~intervals\cf0 .choose;\
	\
	if((newfreq>200).and(newfreq<12000),\{\
	\
		\cf5 ~freq\cf0  = newfreq;\
		\
	\});\
	\
	\cf2 Synth\cf0 (\cf3 \\simplenoise\cf0 ,[\cf3 \\freq\cf0 ,newfreq]);\
	\
	1;\
	\
\});\
\
u = \cf2 TempoClock\cf0 (120/60).sched(0,\{\
\
	\cf4 var\cf0  newfreq = \cf5 ~freq\cf0 ;\
	\
	while(\{newfreq<200\},\{newfreq=newfreq*2\});\
	\
	while(\{newfreq>1000\},\{newfreq=newfreq/2\});\
	\
	\cf2 Synth\cf0 (\cf3 \\beepdecay\cf0 , [\cf3 \\freq\cf0 ,newfreq]);\
	\
	4+10.rand;\
	\
\});\
\
v = \cf2 TempoClock\cf0 (120/60).sched(0,\{\
\
	\cf4 var\cf0  newfreq = \cf5 ~freq\cf0 ;\
	\
	while(\{newfreq<200\},\{newfreq=newfreq*2\});\
	\
	while(\{newfreq>1000\},\{newfreq=newfreq/2\});\
	\
	\cf2 Synth\cf0 (\cf3 \\noisedecay\cf0 , [\cf3 \\freq\cf0 ,newfreq*16]);\
	\
	16+12.rand;\
	\
\});\
\
w = \cf2 TempoClock\cf0 (120/60).sched(0,\{\
\
	\cf4 var\cf0  newfreq = \cf5 ~freq\cf0 ;\
	\
	while(\{newfreq<200\},\{newfreq=newfreq*2\});\
	\
	while(\{newfreq>1000\},\{newfreq=newfreq/2\});\
	\
	\cf2 Synth\cf0 (\cf3 \\noisebuild\cf0 , [\cf3 \\freq\cf0 ,newfreq*16]);\
	\
	16+12.rand;\
	\
\});\
\
)\
}