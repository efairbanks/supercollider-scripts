{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red255\green102\blue0;\red0\green0\blue255;
\red51\green51\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs30 \cf0 \
\cf2 // figure, queue, player, instrument, sequencer\cf0 \
\
\cf2 /*\
\
pass figure parameter list, including length in beats, start beat and process function referencing self\
\
*/\
\
measure[]\
	figure[]\
		note[]\
		\
		\cf0 \
\
(\
\
\cf3 ~createFigure\cf0  = \{ \cf4 |length_in_beats, start_beat, player_parameters|\cf0 \
\
	(\
	\
		lengthInBeats: length_in_beats,\
		\
		startBeat: start_beat,\
		\
		playerParameters: player_parameters,\
		\
		played: \cf5 false\cf0 ,\
		\
		playCheck: \{ \cf4 |self, current_beat, shortest_beat_division|\cf0 \
			\
			\cf4 var\cf0  currentlyPlaying = if(current_beat+(shortest_beat_division/2)>=self.startBeat, \cf5 true\cf0 , \cf5 false\cf0 );\
			\
			if(currentlyPlaying&&self.played.not, \{\
			\
				self.played = \cf5 true\cf0 ;\
				\
				\cf5 true\cf0 ;\
				\
			\}, \{\cf5 false\cf0 ;\});\
			\
		\},\
		\
		doneCheck: \{ \cf4 |self, current_beat, shortest_beat_division|\cf0 \
			\
			if(current_beat+(shortest_beat_division/2) >= (self.startBeat+self.lengthInBeats), \cf5 true\cf0 , \cf5 false\cf0 );\
	\
		\}\
	\
	);\
	\
\};\
\
\cf3 ~createQueue\cf0  = \{\
\
	(\
	\
		figures: [],\
		\
		currentFigure: \cf5 nil\cf0 ,\
		\
		addFigure: \{ \cf4 |self, length_in_beats, start_beat, player_parameters|\cf0 \
			\
			self.figures = self.figures.add(\cf3 ~createFigure\cf0 .(length_in_beats, start_beat, player_parameters));\
			\
		\},\
		\
		process: \{ \cf4 |self, currentbeat, shortest_beat_division|\cf0 \
			\
			if(self.figures.size>0,\{\
				\
				\cf2 // check if current figure needs to be destroyed\cf0 \
				\
				if(self.currentFigure!=\cf5 nil\cf0 ,\{\
					\
					if(self.currentFigure.doneCheck(),\{\
					\
						self.currentFigure = \cf5 nil\cf0 ;\
						\
					\});\
					\
				\});\
				\
				\cf2 // check if there is a figure needs to be played\cf0 \
				\
				if(self.figures[0].playCheck(),\{\
				\
					self.currentFigure = self.figures.removeAt(0);\
					\
					\cf2 // play figure\cf0 \
					\
				\});\
									\
			\},\
			\{\
				\
				\cf5 nil\cf0 ;\
					\
			\});\
			\
		\}\
	\
	);\
\
\};\
\
\cf3 ~createPlayer\cf0  = \{ \cf4 |instrument_list|\cf0 \
\
	(\
	\
		instruments: instrument_list,\
		\
		figures: [],\
		\
		process: \{\}\
	\
	);\
	\
\};\
\
)\
\
a = \cf3 ~createQueue\cf0 .();\
\
a.addFigure(2, 0, ());\
\
a.figures.size;\
\
a.process(0, 1/32);\
\
a = \cf3 ~createFigure\cf0 .(2, 0, (instrument: 0));\
\
a.playCheck(0, 1/32);\
\
(\
\
\
\
)}