{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red96\green96\blue96;\red0\green0\blue191;
\red191\green0\blue0;\red0\green0\blue119;\red67\green67\blue67;\red255\green102\blue0;\red51\green51\blue191;
\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf0 \
(\
\
\cf2 var\cf0  deviceaddr = \cf3 "10.0.2.11"\cf0 ;\
\
\cf2 var\cf0  devicerecvport = 8080;\
\
\cf2 var\cf0  adrs = \cf4 NetAddr\cf0 (deviceaddr, devicerecvport);\
\
adrs.sendMsg(\cf3 "/vol1"\cf0 , 0.5);\
\
\pard\pardeftab560
\cf5 //a.sendMsg("/control/createBlankInterface", "testing", "portrait");\cf0 \
\cf5 //a.sendMsg("/control/pushDestination", "127.0.0.1:57120");
\fs26 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\cf5 /*\
\
\pard\pardeftab720

\f1\fs24 \cf6 NetAddr\cf7 .\cf0 langPort
\f0\fs26 \cf5 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf5 \
\pard\pardeftab560
\cf5 o = OSCresponderNode(nil, "/vol1", \{\
	\
	|t, r, msg|\
	\
	("vol1:" + t).postln; msg[1].postln;\
	\
\}).add;\
\
q = OSCresponderNode(nil, "/pan1", \{\
	\
	|t, r, msg|\
	\
	("/pan1:" + t).postln; msg[1].postln;\
	\
\}).add;\
\
*/\cf0 \
\
)\
\
(\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf8 ~deviceaddr\cf0  = \cf3 "10.0.2.2"\cf0 ;\
\
\cf8 ~devicerecvport\cf0  = 57120;\
\
a = \cf4 NetAddr\cf0 (\cf8 ~deviceaddr\cf0 , \cf8 ~devicerecvport\cf0 );\
\
\pard\pardeftab560
\cf0 p = \cf4 OSCresponderNode\cf0 (\cf9 nil\cf0 , \cf3 "/BassI/Timbre"\cf0 , \{\
	\
	\cf2 |t, r, msg|\cf0 \
	\
	~timbre = msg[1];\
		\
\}).add;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\pard\pardeftab560
\cf0 o = \cf4 OSCresponderNode\cf0 (\cf9 nil\cf0 , \cf3 "/BassI/Degree"\cf0 , \{\
	\
	\cf2 |t, r, msg|\cf0 \
	\
	Synth(\\BassI,[\\freq,Scale.minor.degreeToFreq(msg[1],55,0),\\timbre,~timbre]);\
	\
\}).add;\
\
Synth(\\BassI);\
\
(\cf10 \
\
\cf11 SynthDef\cf10 (\cf12 \\BassI\cf10 ,\{\
\
	\cf2 |freq=440,timbre=10|\cf10 \
\
	\cf2 var\cf10  tone, env, out;\
	\
	tone = \cf11 Pulse\cf10 .ar(freq/2,0.4)+Pulse.ar(freq*3/4,0.05)+SinOsc.ar(freq);\
	\
	env = \cf11 EnvGen\cf10 .ar(\cf11 Env\cf10 ([0,1,0],[0.01,0.2]), doneAction:2);\
	\
	tone = R\cf11 LPF\cf10 .ar(tone, env*12000*timbre/10,0.2);\
	\
	tone = \cf11 HPF\cf10 .ar(tone, 30);\
	\
	out = tone*env;\
	\
	\cf11 Out\cf10 .ar(0, out!2);\
	\
\}).store;\
\
\cf0 )}