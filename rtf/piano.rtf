{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red191\green0\blue0;\red0\green115\blue0;}
\deftab560
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural

\f0\fs26 \cf2 \
(\
\
a=1.0;\
\
c=1.0;\
\
\pard\pardeftab560
\cf3 MIDIClient\cf2 .init;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf2 \
~xboard = \cf3 MIDIIn\cf2 .connect(0,\cf3 MIDIClient\cf2 .sources.indexOf(\cf3 MIDIIn\cf2 .findPort(\cf4 "E-MU Xboard49"\cf2 , \cf4 "E-MU Xboard49"\cf2 )));\
\
~notes = ();\
\
\pard\pardeftab560
\cf2 ~xboard.noteOn = \{\
	\
				\cf3 |src, chan, num, vel|\cf2 \
				\
				\cf5 //~notes = Array.new().addAll(~notes).add(num);\cf2 \
				\
				\cf5 //~notes = ~notes.sort(\{|a,b|a<b;\});\cf2 \
				\
				~notes[num] = \cf3 Synth\cf2 (\cf6 \\lead1\cf2 ,[\cf6 \\freq\cf2 ,num.midicps,\
												\cf6 \\amp\cf2 ,a,\
												\cf6 \\cutoff\cf2 ,c]);\
				\
				\cf5 //~notes.postln;\cf2 \
				\
				\cf5 //num.postln;\cf2 \
				\
				\};\
				\
~xboard.noteOff = \{\
	\
				\cf3 |src, chan, num, vel|\cf2 \
				\
				\cf5 //~notes = Array.new().addAll(~notes).removeAll([num]);\cf2 \
				\
				\cf5 //~notes.postln;\cf2 \
				\
				//~notes[num].free\
				\
				\};\
\cf5 /*\
t = TempoClock(120/60).schedAbs(0,	\{\
	\
											|in|\
	\
											if(	~notes.size>0,\
												\{\
													Synth(\\lead1).set(\\freq, 2**(~notes[~inc%~notes.size]/12)*55,\\amp,12.reciprocal);\
												\},\
												\{\});\
												\
											~inc = ~inc + 1;\
												\
											0.5;\
	\
										\});\
*/\cf2 				\
-)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
(\
\
a = \cf3 NetAddr\cf2 (\cf4 "129.63.91.157"\cf2 , 8080);\
\
\pard\pardeftab560
\cf2 o = \cf3 OSCresponderNode\cf2 (\cf3 nil\cf2 , \cf4 "/sliders/1"\cf2 , \{\
	\
	\cf3 |t, r, msg|\cf2 \
	\
	(\cf4 "time:"\cf2  + t).postln; msg[1].postln;\
	\
\}).add;\
\
\
p = \cf3 OSCresponderNode\cf2 (\cf3 nil\cf2 , \cf4 "/knob1"\cf2 , \{\
	\
	\cf3 |t, r, msg|\cf2 \
	\
	a = msg[1];\
	\
\}).add;\
\
q = \cf3 OSCresponderNode\cf2 (\cf3 nil\cf2 , \cf4 "/knob2"\cf2 , \{\
	\
	\cf3 |t, r, msg|\cf2 \
	\
	c = msg[1];\
	\
\}).add;\
\
)\
\
(\
\
\cf3 SynthDef\cf2 (	\cf6 \\lead1\cf2 ,\
			\{\
			\
			\cf3 |freq=440,amp=0.1,cutoff=1.0|\cf2 \
				\
			\cf3 var\cf2  tone, env, out, lfo;\
			\
			env = EnvGen.ar(Env([1/8,1,1/8],[0.01,2]), doneAction:2);\
			\
			tone = \cf3 Pulse\cf2 .ar(freq*2,0.1)*amp;\
			\
			out = tone;\
			\
			out = \cf3 RLPF\cf2 .ar(out,freq*8*cutoff*env,0.1);\
			\
			out = HPF.ar(out, 40);\
			\
			out = out*(env-(1/8))/4;\
			\
			\cf3 Out\cf2 .ar(0,out!2);\
				\
			\}).store;\
\
)\
\
\
\
}