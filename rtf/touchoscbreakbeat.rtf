{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red96\green96\blue96;\red0\green0\blue191;\red0\green0\blue255;
\red191\green0\blue0;\red255\green102\blue0;\red51\green51\blue191;\red0\green115\blue0;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
(\
\
a = \cf2 "10.0.2.15"\cf0 ;\
\
p = 9000;\
\
n = \cf3 NetAddr\cf0 (a,p);\
\
32.do(\{\
\
	\cf4 |inc|\cf0 \
\
	n.sendMsg(\cf2 "/1/multifader1/"\cf0  ++ (inc+1), sin(inc/32*pi*2)+1/2);\
\
\});\
\
\cf5 /*\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf5 r = OSCresponderNode(nil, "/1/multifader1/1", \{\
	\
	|t, r, msg|\
	\
	("/1/multifader1/1: " + t).postln; msg[1].postln;\
	\
\}).add;\
\
*/\cf0 \
\
(\
\
\cf6 ~enc\cf0  = 0;\
\
\cf3 OSCresponderNode\cf0 (\cf7 nil\cf0 ,\cf2 "/1/encoder1"\cf0 ,\{\
\
	\cf4 |t, r, msg|\cf0 \
	\
	if(msg[1] == 1,\{\
		\
		\cf6 ~enc\cf0  = \cf6 ~enc\cf0  + 0.1;\
		\
		\},\{\
		\
		\cf6 ~enc\cf0  = \cf6 ~enc\cf0  - 0.1;\
			\
	\});\
	\
	\cf6 ~enc\cf0 .postln;\
	\
\}).add;\
\
)\
\
\cf5 // Setup for simple sequencer -- v --\cf0 \
\
(\
\
\cf6 ~tc\cf0 .stop;\
\
\cf5 // --- //\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 a = \cf2 "10.0.2.32"\cf0 ;\
\
p = 9000;\
\
n = \cf3 NetAddr\cf0 (a,p);\
\
\cf5 // --- //\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 b = \cf3 Buffer\cf0 .read(s, \cf3 Platform\cf0 .resourceDir ++ \cf2 "/sounds/break.wav"\cf0 );\
\
\cf6 ~syn\cf0  = \cf3 SynthDef\cf0 (\cf8 \\break\cf0 , \{\
	\
	\cf4 |out = 0, bufnum = 0, spos = 0, trig = 0, rate = 1, len = 1|\cf0 \
\
	\cf3 Out\cf0 .ar(out,\
\
		\cf3 PlayBuf\cf0 .ar(1, bufnum, \cf3 BufRateScale\cf0 .kr(bufnum)*rate, loop: 0, startPos: spos*\cf3 BufFrames\cf0 .kr(bufnum)) * \cf3 EnvGen\cf0 .ar(\cf3 Env\cf0 ([1,0],[len/4]), doneAction:2)/8!2\
\
	)\
\
\}).store;\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf5 // --- //\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf6 ~seqpos\cf0  = 0;\
\
\cf6 ~playrate\cf0  = 1;\
\
\cf6 ~playlen\cf0  = 1;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf3 OSCresponderNode\cf0 (\cf7 nil\cf0 ,\cf2 "/1/rotary3"\cf0 ,\{\
	\
	\cf4 |time, responder, msg|\cf0 \
	\
	\cf6 ~tc\cf0 .tempo = (msg[1]*300/60);\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \}).add;\
\
\cf3 OSCresponderNode\cf0 (\cf7 nil\cf0 ,\cf2 "/1/xy1"\cf0 ,\{\
\
	\cf4 |time, responder, msg|\cf0 \
\
	\cf6 ~playrate\cf0  = msg[1];\
	\
	\cf6 ~playlen\cf0  = msg[2];\
	\
\}).add;\
\
8.do(\{\
\
	\cf4 |iter|\cf0 \
	\
	\cf3 OSCresponderNode\cf0 (\cf7 nil\cf0 ,\cf2 "/1/multipush1/1/"\cf0  ++ (iter+1), \{\
	\
		\cf4 |time, responder, msg|\cf0 \
		\
		\cf6 ~seqpos\cf0  = iter;\
	\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 	\}).add;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\});\
\
14.do(\{\
\
	\cf4 |iter|\cf0 \
	\
	\cf3 OSCresponderNode\cf0 (\cf7 nil\cf0 ,\cf2 "/1/keyboard/1/"\cf0  ++ (iter+1), \{\
	\
		\cf4 |time, responder, msg|\cf0 \
		\
		var note = Scale.minor[iter] + (12*(iter/7).asInteger);\
		\
		if(msg[1] == 1, \{\cf3 Synth\cf0 (\cf8 \\leads\cf0 , [\cf8 \\freq\cf0 , (note+36).midicps])\});\
	\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 	\}).add;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\});\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf6 ~tc\cf0  = \cf3 TempoClock\cf0 (160/60).sched(0,\{\
\
	8.do(\{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 	\
		\cf4 |xinc|\cf0 \
		\
		n.sendMsg(\cf2 "/1/multipush1/1/"\cf0  ++ (xinc+1), if(xinc == \cf6 ~seqpos\cf0 , \{1\}, \{0\}));\
\
	\});\
	\
	\cf3 Synth\cf0 (\cf8 \\break\cf0 , [\cf8 \\out\cf0 , 0, \cf8 \\bufnum\cf0 , b, \cf8 \\spos\cf0 , \cf6 ~seqpos\cf0 /8, \cf8 \\rate\cf0 , \cf6 ~playrate\cf0 , \cf8 \\len\cf0 , \cf6 ~playlen\cf0 ]);\
	\
	\cf6 ~seqpos\cf0  = (\cf6 ~seqpos\cf0  + 1) % 8;\
	\
	1/2;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 	\
\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
)\
}