{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red255\green102\blue0;\red51\green51\blue191;
\red0\green0\blue191;\red96\green96\blue96;\red0\green0\blue255;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs30 \cf0 \
(\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 /* TODO:\
 * \
 * * Make padKONTROL class (singleton)\
 * * Handle inputs and build states/getters for pressed, held, released, etc\'85\
 * * Migrate output functions to class\
 * \
 * \
 * \
 */\cf0 \
\
\cf3 ~pks\cf0  = \cf4 nil\cf0 ; \cf2 // Keepin' it fresh!\cf0 \
\
\cf3 ~padKONTROL\cf0  = \{\
	\
	\cf2 // pks = PadKONTROL Singleton\cf0 \
	\
	|message|\
	\
	if(\cf3 ~pks\cf0 ==\cf4 nil\cf0 ,\{\
	\
		\cf5 MIDIClient\cf0 .init;\
	\
		\cf3 ~pks\cf0  = ();\
		\
		\cf3 ~pks\cf0 .sysexSend = \cf5 MIDIOut\cf0 .new(\cf5 MIDIClient\cf0 .destinations.indexOf(\cf5 MIDIOut\cf0 .findPort(\cf6 "padKONTROL"\cf0 , \cf6 "CTRL"\cf0 )));\
		\cf3 ~pks\cf0 .sysexRecv = \cf5 MIDIIn\cf0 .connect(0,\cf5 MIDIClient\cf0 .sources.indexOf(\cf5 MIDIIn\cf0 .findPort(\cf6 "padKONTROL"\cf0 , \cf6 "PORT A"\cf0 )));\
		\
		\cf3 ~pks\cf0 .init = \{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf0 				\
			\cf3 ~pks\cf0 .sysexSend.sysex(\cf5 Int8Array\cf0 [0xF0, 0x42, 0x40, 0x6E, 0x08, 0x00, 0x00, 0x01, 0xF7,0xF0, 0x42, 0x40, 0x6E, 0x08, 0x3F, 0x2A, 0x00, 0x00, 0x05, 0x05, 0x05, 0x7F, 0x7E, 0x7F, 0x7F, 0x03, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0d, 0x0E, 0x0F, 0x10, 0xF7,0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x29,0x29,0xF7]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 		\
		\};\
		\
		\cf3 ~pks\cf0 .init.();\
	\
		\cf3 ~pks\cf0 .button2index = (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf0 \
			0: 0,\
			1: 1,\
			2: 2,\
			3: 3,\
			4: 4,\
			5: 5,\
			6: 6,\
			7: 7,\
			8: 8,\
			9: 9,\
			10: 10,\
			11: 11,\
			12: 12,\
			13: 13,\
			14: 14,\
			15: 15,\
			scene: 16,\
			message: 17,\
			setting: 18,\
			note: 19,\
			midich: 20,\
			swtype: 21,\
			relval: 22,\
			velocity: 23,\
			port: 24,\
			fixedvelocity: 25,\
			progchange: 26,\
			x: 27,\
			y: 28,\
			knob1: 29,\
			knob2: 30,\
			pedal: 31,\
			roll: 32,\
			flam: 33,\
			hold: 34\
		\
		);\
		\
		\cf3 ~pks\cf0 .states2sysex = \{\
\
			\cf7 |states, numberarray|\cf0 \
			\
			\cf7 var\cf0  hexarray, numvalues;\
			\
			numvalues = (states.size/7).asInteger;\
			\
			hexarray = 0!numvalues;\
			\
			numvalues.do(\{ \cf7 |valueiter|\cf0 \
				\
				7.do(\{ \cf7 |bititer|\cf0 \
				\
					hexarray[valueiter] = states[valueiter*7+bititer]*(1<<bititer) + hexarray[valueiter];\
				\
				\});\
				\
			\});\
			\
			hexarray++[0x00]++(numberarray.reverse);\
			\
		\};\
		\
		\cf3 ~pks\cf0 .sendSysex = \{\
	\
			\cf7 |hexvals|\cf0 \
			\
			\cf3 ~pks\cf0 .sysexSend.sysex(\cf5 Int8Array\cf0 .newFrom([0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01]++hexvals++[0xF7]));\
			\
		\};\
		\
		\cf3 ~pks\cf0 .lightStates	= (1!16)++(0!19);\
		\cf3 ~pks\cf0 .numberStates	= [0x32,0x32,0x32];\
		\
		\cf3 ~pks\cf0 .setLights = \{\
		\
			\cf3 ~pks\cf0 .sendSysex.(\cf3 ~pks\cf0 .states2sysex.(\cf3 ~pks\cf0 .lightStates, \cf3 ~pks\cf0 .numberStates));\
			\
		\};\
		\
		\cf3 ~pks\cf0 .setLights.();\
		\
		\cf2 // --- end class --- //\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 		\
	\});\
	\
	\cf2 // --- //\cf0 \
	\
	\cf3 ~pks\cf0 [message];\
	\
\};\
\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf3 ~padKONTROL\cf0 .(\cf8 \\init\cf0 );\
\
\cf3 ~padKONTROL\cf0 .(\cf8 \\sendSysex\cf0 ).(\cf3 ~padKONTROL\cf0 .(\cf8 \\states2sysex\cf0 ).(1!35, [0x32,0x32,0x32]));\
\
(\
\
\pard\pardeftab560
\cf5 MIDIClient\cf0 .init;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf3 ~pkMIDIout\cf0 	= \cf5 MIDIOut\cf0 .new(\cf5 MIDIClient\cf0 .destinations.indexOf(\cf5 MIDIOut\cf0 .findPort(\cf6 "padKONTROL"\cf0 , \cf6 "CTRL"\cf0 )));\
\
\cf3 ~pkMIDIin\cf0 	= \cf5 MIDIIn\cf0 .connect(0,\cf5 MIDIClient\cf0 .sources.indexOf(\cf5 MIDIIn\cf0 .findPort(\cf6 "padKONTROL"\cf0 , \cf6 "PORT A"\cf0 )));\
\
\cf3 ~pkInit\cf0  = \{\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf7 |midiport|\cf0 \
	\
midiport.sysex(\cf5 Int8Array\cf0 [0xF0, 0x42, 0x40, 0x6E, 0x08, 0x00, 0x00, 0x01, 0xF7,0xF0, 0x42, 0x40, 0x6E, 0x08, 0x3F, 0x2A, 0x00, 0x00, 0x05, 0x05, 0x05, 0x7F, 0x7E, 0x7F, 0x7F, 0x03, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0d, 0x0E, 0x0F, 0x10, 0xF7,0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x29,0x29,0xF7]);\
\
\};\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf3 ~pkTest\cf0  = \{\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf7 |midiport|\cf0 	\
	\
midiport.sysex(\cf5 Int8Array\cf0 [0xF0,0x42,0x40,0x6E,0x08,0x22,0x04,0x00,0x59,0x45,0x53,0xF7]);\
	\
\};\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf3 ~pkSetLight\cf0  = \{\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf7 |midiport, light, state|\cf0 \
	\
midiport.sysex(\cf5 Int8Array\cf0 [0xF0,0x42,0x40,0x6E,0x08,0x01,light,0x20*state,0xF7]);\
	\
\};\
\
\pard\pardeftab720\sl360
\cf3 ~pkSetAllLights\cf0  = \{\
\
	\cf7 |midiport|\cf0 \
	\
	midiport.sysex(\cf5 Int8Array\cf0 [0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x7F,0x7F,0x7F,0x7F,0x7F,0x00,0x38,0x38,0x38,0xF7]);\
	\
	\
	\
\};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf0 \
\cf3 ~pkLightStates2HexArray\cf0  = \{\
\
	\cf7 |states, lights|\cf0 \
	\
	\cf7 var\cf0  hexarray, numvalues;\
	\
	numvalues = (states.size/7).asInteger;\
	\
	hexarray = 0!numvalues;\
	\
	numvalues.do(\{ \cf7 |valueiter|\cf0 \
		\
		7.do(\{ \cf7 |bititer|\cf0 \
		\
			hexarray[valueiter] = states[valueiter*7+bititer]*(1<<bititer) + hexarray[valueiter];\
		\
		\});\
		\
	\});\
	\
	hexarray++[0x00]++(lights.reverse);\
	\
\};\
\
\cf3 ~pkSetLightStates\cf0  = \{\
	\
	\cf7 |hexvals|\cf0 \
	\
	\cf3 ~pkMIDIout\cf0 .sysex(\cf5 Int8Array\cf0 .newFrom([0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01]++hexvals++[0xF7]));\
	\
\};\
\
\cf3 ~randomizeLightStates\cf0  = \{\
	\
	\cf3 ~pkLightStates\cf0 .size.do(\{\
	\
		\cf7 |inc|\cf0 \
		\
		\cf3 ~pkLightStates\cf0 [inc] = 2.rand;\
		\
	\});\
	\
	\cf3 ~pkSetLightStates\cf0 .(\cf3 ~pkLightStates2HexArray\cf0 .(\cf3 ~pkLightStates\cf0 , [38,38,38]));\
	\
\};\
\
\cf3 ~buttonName2Index\cf0  = (\
\
	0: 0,\
	1: 1,\
	2: 2,\
	3: 3,\
	4: 4,\
	5: 5,\
	6: 6,\
	7: 7,\
	8: 8,\
	9: 9,\
	10: 10,\
	11: 11,\
	12: 12,\
	13: 13,\
	14: 14,\
	15: 15,\
	scene: 16,\
	message: 17,\
	setting: 18,\
	note: 19,\
	midich: 20,\
	swtype: 21,\
	relval: 22,\
	velocity: 23,\
	port: 24,\
	fixedvelocity: 25,\
	progchange: 26,\
	x: 27,\
	y: 28,\
	knob1: 29,\
	knob2: 30,\
	pedal: 31,\
	roll: 32,\
	flam: 33,\
	hold: 34\
\
);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf2 // --- //\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf3 ~pkInit\cf0 .(\cf3 ~pkMIDIout\cf0 );\
\
\cf3 ~pkLightStates\cf0  = ((0!35)[19]=1);\
\
\cf3 ~pkSetLightStates\cf0 .(\cf3 ~pkLightStates2HexArray\cf0 .(((0!35)[\cf3 ~buttonName2Index\cf0 [\cf8 \\setting\cf0 ]]=1), [0x31,0x32,0x33]));\
\
\cf3 ~randomizeLightStates\cf0 .();\
\
\cf3 ~pkLightStates\cf0 [0]=1;\
\
\pard\pardeftab720\sl360
\cf3 ~pkMIDIout\cf0 .sysex(\cf5 Int8Array\cf0 [0xF0,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x7F,0x7F,0x7F,0x7F,0x7F,0x00,0x38,0x38,0x38,0xF7]);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf3 ~pkMIDIin\cf0 .sysex = \{\
	\
	\cf7 |src, sysex|\cf0 \
	\
	sysex[5].switch(\
	\
		0x45,\{	[\cf8 \\pad\cf0 ,(sysex[6]%64),(sysex[6]/64).round,sysex[7]/127].postln;\
					if((sysex[6]/64).round==1,\{\cf5 Synth\cf0 (\cf8 \\sweeper\cf0 ,[\cf8 \\freq\cf0 ,125*(15-(sysex[6]%64)),\cf8 \\amp\cf0 ,sysex[7]/127])\});\
				\},\
			\
		0x49,\{	[\cf8 \\knob\cf0 ,sysex[6],sysex[7]].postln;\
				\cf3 ~pkSetNum\cf0 .value(\cf3 ~pkMIDIout\cf0 ,sysex[7]);\
				\},\
		\
		0x43,\{	[\cf8 \\rotary\cf0 ,sysex[7]].postln;\
				\cf2 /*\
				if(sysex[7]==1,\{~tempo=~tempo+1\},\{~tempo=~tempo-1\});\
				~pkSetNum.value(~pkMIDIout,~tempo);\
				if(~tempo<0,\{~tempo=0\},\{\});\
				t.tempo = ~tempo/30;\
				*/\cf0 \
				\},\
		\
		0x48,\{\
				[\cf8 \\button\cf0 ,sysex[6],sysex[7]].postln;\
			\},\
		\
		0x4b,\{\
				[\cf8 \\x\cf0 ,sysex[6],\cf8 \\y\cf0 ,sysex[7]].postln;\
			\}\
	\
	);\
\
\};\
\pard\pardeftab720\sl360
\cf0 \
\pard\pardeftab720\sl360
\cf2 //-------//\cf0 \
\cf2 //-------//\cf0 \
\cf2 //-------//\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 /*\
\{\
	var z, p, n, sweeper;\
	\
	p = 500;\
	\
	z = `[Array.fill(p, \{ 80 + 10000.0.linrand\} ), Array.fill(p, \{ 1.0.rand2 \}), Array.fill(p, \{ 0.2 + 0.5.rand \} ) ];\
	\
	sweeper = BPF.ar(PinkNoise.ar(), EnvGen.ar(Env([2500,10,10],[0.0125,1]), doneAction: 2), 0.05);\
	\
	(Klank.ar(z,sweeper)*EnvGen.ar(Env([1,1,0],[0.0125,1]), doneAction: 2))!2;\
	\
\}.play;\
*/\cf0 \
\
\cf5 SynthDef\cf0 (\cf8 \\sweeper\cf0 ,\{\
	\
	\cf7 |freq=440, amp=1.0|\cf0 \
	\
	\cf7 var\cf0  z, p, n, sweeper;\
	\
	var expAmp = amp*amp;\
	\
	p = 50;\
	\
	z = `[\cf5 Array\cf0 .fill(p, \{ 80 + 10000.0.linrand\} ), \cf5 Array\cf0 .fill(p, \{ 1.0.rand2 \}), \cf5 Array\cf0 .fill(p, \{ 0.2 + 0.5.rand \} ) ];\
	\
	sweeper = LPF.ar(\cf5 BPF\cf0 .ar(\cf5 PinkNoise\cf0 .ar(), \cf5 EnvGen\cf0 .ar(\cf5 Env\cf0 ([freq+(expAmp*1000),10,10],[amp/200,1]), doneAction: 2), 0.05), expAmp*10000);\
	\
	\cf5 Out\cf0 .ar(0, (\cf5 Klank\cf0 .ar(z,sweeper)*\cf5 EnvGen\cf0 .ar(\cf5 Env\cf0 ([amp,amp/7,0],[0.0125,1]), doneAction: 2))!2);\
	\
\}).store;\
\
)}