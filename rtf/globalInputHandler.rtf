{\rtf1\ansi\ansicpg1252\cocoartf1265
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf0 ( \cf2 // keyboard input handling\cf0 \
w = \cf3 Window\cf0 .new(\cf4 "Derp"\cf0 );\
\pard\pardeftab720
\cf0 w.view.background_(\cf3 Color\cf0 .black);\
w.drawHook = \{\};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf3 AppClock\cf0 .sched(0.0,\{w.refresh;0.1;\});\
w.view.keyDownAction = \{\cf3 |v,c,m,u,k|\cf0  \
	\cf2 //if([$1].indexOf(c)!=nil,\{Synth(\\snare)\});\cf0 \
	c.switch($z,\{\cf3 Synth\cf0 (\cf5 \\kick\cf0 ,[\cf5 \\amp\cf0 ,0.3]);\},$x,\{\cf3 Synth\cf0 (\cf5 \\snare\cf0 ,[\cf5 \\amp\cf0 ,0.3]);\},$,,\{\cf3 Synth\cf0 (\cf5 \\hats\cf0 ,[\cf5 \\amp\cf0 ,0.01]);\});\
\};\
w.front;\
)\
\
( \cf2 // launchpad input handling
\fs26 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf3 MIDIClient\cf0 .init;\
l = ();\
l.midisource=\cf3 MIDIClient\cf0 .sources.detect\{\cf3 |a|\cf0 a.name.contains(\cf4 "Launchpad"\cf0 )\};\
l.mididestination=\cf3 MIDIClient\cf0 .destinations.detect\{\cf3 |a|\cf0 a.name.contains(\cf4 "Launchpad"\cf0 )\};\
l.midirecv=\cf3 MIDIIn\cf0 .connect(0,l.midisource.uid);\
l.midiout=\cf3 MIDIOut\cf0 (0,l.mididestination.uid);\
l.midirecv.noteOn=\{\cf3 |src,chan,num,val|\cf0 \};\
l.midirecv.noteOff=\{\cf3 |src,chan,num,val|\cf0 \};\
l.greenDisplayBuffer = [1]++(0!63);\
l.redDisplayBuffer = [1]++(0!63);\
l.draw = \{\
	l.midiout.noteOn(3,0,0);\
	32.do(\{\cf3 |inc|\cf0 \
		\cf3 var\cf0  message = [0x92];\
		message = message.add(l.redDisplayBuffer[inc*2]|(l.greenDisplayBuffer[inc*2]<<4));\
		message = message.add(l.redDisplayBuffer[inc*2+1]|(l.greenDisplayBuffer[inc*2+1]<<4));\
		l.midiout.sysex(\cf3 Int8Array\cf0 .newFrom(message));\
	\});\
	8.do(\{l.midiout.sysex(\cf3 Int8Array\cf0 [0x92,0x0c,0x0c]);\});\
	l.midiout.sysex(\cf3 Int8Array\cf0 [0xb0,0x00,0x01]);\
	\cf3 nil\cf0 ;\
\};\
l.draw.();\
)\
\
( \cf2 // padkontrol input handling\cf0 \
\cf3 MIDIClient\cf0 .init;\
p = ();\
p.sysexSend = \cf3 MIDIOut\cf0 .new(\cf3 MIDIClient\cf0 .destinations.indexOf(\cf3 MIDIOut\cf0 .findPort(\cf4 "padKONTROL"\cf0 , \cf4 "CTRL"\cf0 )));\
p.sysexRecv = \cf3 MIDIIn\cf0 .connect(0,\cf3 MIDIClient\cf0 .sources.indexOf(\cf3 MIDIIn\cf0 .findPort(\cf4 "padKONTROL"\cf0 , \cf4 "PORT A"\cf0 )));\
p.sysexSend.sysex(\cf3 Int8Array\cf0 .newFrom([0x\cf3 F0\cf0 , 0x42, 0x40, 0x6E, 0x08, 0x00, 0x00, 0x01, 0x\cf3 F7\cf0 ,0x\cf3 F0\cf0 , 0x42, 0x40, 0x6E, 0x08, 0x3F, 0x2A, 0x00, 0x00, 0x05, 0x05, 0x05, 0x7F, 0x7E, 0x7F, 0x7F, 0x03, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0d, 0x0E, 0x0F, 0x10, 0x\cf3 F7\cf0 ,0x\cf3 F0\cf0 ,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x29,0x29,0x\cf3 F7\cf0 ]));\
p.sysexRecv.sysex = \{\cf3 |src, sysex|\cf0 \};\
p.buttonvals = [0x7f,0x7f,0x7f,0x7f,0x7f];\
p.numvals = [0x33,0x32,0x31];\
p.sysexMessage = [0x\cf3 F0\cf0 ,0x42,0x40,0x6E,0x08,0x3F,0x0A,0x01]++p.buttonvals++[0x00]++p.numvals++[0x\cf3 F7\cf0 ];\
p.sysexSend.sysex(\cf3 Int8Array\cf0 .newFrom(p.sysexMessage));\
)\
}