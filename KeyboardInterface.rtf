{\rtf1\ansi\ansicpg1252\cocoartf1265
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red255\green102\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;\red0\green0\blue255;\red51\green51\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf0 \
\cf2 /*\
\
Two modes, a global editing mode and a track editing mode.\
\
Each track has its own rendering routine and command set.\
\
The global mode has its own rendering routine and command set.\
\
There is a global stack that numbers can be pushed to so as to be used as arguments to commands.\
\
Commands are mapped to specific keys, and when that key is pressed it pulls the appropriate number of arguments off the stack and the command is executed.\
\
*/\cf0 \
\
(\
\
\cf2 /* ------ */\cf0 \
\
\cf3 ~sequenceCursor\cf0  = 0;\
\
t = \cf4 TempoClock\cf0 (130/60).sched(0,\{\
\
	if(\cf3 ~keysLeftStatus\cf0 [\cf3 ~sequenceCursor\cf0 ]>0,\{\cf4 Synth\cf0 (\cf5 \\bassdrum\cf0 );\});\
\
	if(\cf3 ~keysRightStatus\cf0 [\cf3 ~sequenceCursor\cf0 ]>0,\{\cf4 Synth\cf0 (\cf5 \\snaredrum\cf0 );\});\
	\
	\cf3 ~sequenceCursor\cf0  = (\cf3 ~sequenceCursor\cf0  + 1)%16;\
	\
	1/4;\
\
\});\
\
\cf2 /* ------ */\cf0 \
\
\cf3 ~keysLeftMap\cf0  = [$1,$2,$3,$4,$q,$w,$e,$r,$a,$s,$d,$f,$z,$x,$c,$v];\
\cf3 ~keysLeftStatus\cf0  = 0!\cf3 ~keysLeftMap\cf0 .size;\
\
\cf3 ~keysRightMap\cf0  = [$7,$8,$9,$0,$u,$i,$o,$p,$j,$k,$l,$;,$m,$,,$.,$/];\
\cf3 ~keysRightStatus\cf0  = 0!\cf3 ~keysRightMap\cf0 .size;\
\
\cf2 //w.close;\cf0 \
\
\cf3 ~x\cf0  = 100;\
\cf3 ~y\cf0  = 100;\
\
w = \cf4 Window\cf0 .new(\cf6 "Derp"\cf0 );\
\
\pard\pardeftab720
\cf0 w.view.background_(\cf4 Color\cf0 .black); \
\'a0 \'a0 \'a0 \'a0 \
w.drawHook = \{\
	\
	\cf2 /*\
	Pen.strokeColor = Color.green; \
	Pen.width = 2; \
	Pen.moveTo((~x-5)@~y); \
	Pen.lineTo((~x+5)@~y); \
	Pen.stroke;\
	Pen.moveTo(~x@(~y-5)); \
	Pen.lineTo(~x@(~y+5)); \
	Pen.stroke;\
	*/\cf0 \
	\
	\cf7 var\cf0  squareSize = 50;\
	\
	\cf4 Pen\cf0 .width = 2;\
	\
	\cf4 Pen\cf0 .strokeColor = \cf4 Color\cf0 .green;\
	\
	\cf4 Pen\cf0 .fillColor = \cf4 Color\cf0 .green;\
	\
	16.do(\{\
	\
		\cf7 |inc|\cf0 \
		\
		\cf7 var\cf0  x, y, xoff, square;\
		\
		x = (inc%4)*squareSize;\
		\
		y = (inc/4).asInteger*squareSize;\
		\
		xoff = y/2;\
		\
		square = \cf4 Rect\cf0 (10+x+xoff,10+y,squareSize,squareSize);\
		\
		\cf4 Pen\cf0 .strokeRect(square);\
		\
		if(\cf3 ~keysLeftStatus\cf0 [inc]>0,\{\
			\
			\cf4 Pen\cf0 .fillRect(square.insetBy(3,3))\
			\
		\});\
		\
	\});\
	\
	16.do(\{\
	\
		\cf7 |inc|\cf0 \
		\
		\cf7 var\cf0  x, y, xoff, square;\
		\
		x = (inc%4)*squareSize+(squareSize*5);\
		\
		y = (inc/4).asInteger*squareSize;\
		\
		xoff = y/2;\
		\
		square = \cf4 Rect\cf0 (10+x+xoff,10+y,squareSize,squareSize);\
		\
		\cf4 Pen\cf0 .strokeRect(square);\
		\
		if(\cf3 ~keysRightStatus\cf0 [inc]>0,\{\
			\
			\cf4 Pen\cf0 .fillRect(square.insetBy(3,3))\
			\
		\});\
		\
	\});\
\
\};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\cf4 AppClock\cf0 .sched(0.0,\{w.refresh;0.1;\});\
\
w.view.keyDownAction = \{\
		\
		\cf7 |v,c,m,u,k|\cf0 \
		\
		\cf7 var\cf0  x, y, keysLeftIndex, keysRightIndex;\
		\
		keysLeftIndex = \cf3 ~keysLeftMap\cf0 .indexOf( c );\
		keysRightIndex = \cf3 ~keysRightMap\cf0 .indexOf( c );\
		\
		if(keysLeftIndex!=\cf8 nil\cf0 ,\{\
		\
			\cf3 ~keysLeftStatus\cf0 [keysLeftIndex].switch(\
			\
				0,\{\
					\
					\cf3 ~keysLeftStatus\cf0 [keysLeftIndex] = 1;\
					\
				\},\
				1,\{\
					\
					\cf3 ~keysLeftStatus\cf0 [keysLeftIndex] = 0;\
					\
				\}\
			\
			);\
		\
		\});\
		\
		if(keysRightIndex!=\cf8 nil\cf0 ,\{\
		\
			\cf3 ~keysRightStatus\cf0 [keysRightIndex].switch(\
			\
				0,\{\
					\
					\cf3 ~keysRightStatus\cf0 [keysRightIndex] = 1;\
					\
				\},\
				1,\{\
					\
					\cf3 ~keysRightStatus\cf0 [keysRightIndex] = 0;\
					\
				\}\
			\
			);\
		\
		\});\
		\
		\cf2 //~keysLeftStatus.postln;\cf0 \
		\
		\cf2 /*\
		k.switch(	\
\
			123,\{~x = ~x - ~inc;\},\
			124,\{~x = ~x + ~inc;\},\
			125,\{~y = ~y + ~inc;\},\
			126,\{~y = ~y - ~inc;\},\
			27,\{~inc = ~inc - 1;\},\
			24,\{~inc = ~inc + 1;\},\
			\{\}\
				\
		);\
		*/\cf0 \
	\
\};\
\
w.front;\
\
)}